# Default values for Exastro.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  itaGlobalDefinition:
    name: ita-global
    enabled: true
    image:
      registry: "docker.io"
      organization: exastro
      package: exastro-it-automation
    config:
      DEFAULT_LANGUAGE: "ja"
      LANGUAGE: "en"
      CONTAINER_BASE: "kubernetes"
      TZ: "Asia/Tokyo"
      STORAGEPATH: "/storage/"
    secret:
      ENCRYPT_KEY: ""
    persistence:
      enabled: true
      accessMode: ReadWriteMany
      size: 10Gi
      volumeType: hostPath # e.g.) hostPath or AKS
      storageClass: "-" # e.g.) azurefile or - (None)
      # matchLabels:
      #   release: "stable"
      # matchExpressions:
      #   - {key: environment, operator: In, values: [dev]}
  gitlabDefinition:
    name: gitlab
    enabled: true
    config:
      GITLAB_PROTOCOL: "http"
      GITLAB_HOST: "gitlab"
      GITLAB_PORT: "80"
    secret:
      GITLAB_ROOT_TOKEN: ""
  itaDatabaseDefinition:
    name: ita-database
    enabled: true
    config:
      DB_VENDOR: "mariadb"
      DB_HOST: "mariadb"
      DB_PORT: "3306"
      DB_DATABASE: "ITA_DB"
    secret:
      DB_ADMIN_USER: ""
      DB_ADMIN_PASSWORD: ""
      DB_USER: ""
      DB_PASSWORD: ""
  pfGlobalDefinition:
    name: pf-global
    enabled: true
    image:
      registry: "docker.io"
      organization: exastro
      package: exastro-platform
    config:
      DEFAULT_LANGUAGE: "ja"
      LANGUAGE: "en"
      TZ: "Asia/Tokyo"
      PYTHONIOENCODING: utf-8
      PLATFORM_API_PROTOCOL: "http"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
      PLATFORM_WEB_PROTOCOL: "http"
      PLATFORM_WEB_HOST: "platform-web"
      PLATFORM_WEB_PORT: "8000"
    secret:
      ENCRYPT_KEY: ""
    persistence:
      enabled: true
      accessMode: ReadWriteMany
      size: 10Gi
      volumeType: hostPath # e.g.) hostPath or AKS
      storageClass: "-" # e.g.) azurefile or - (None)
      # matchLabels:
      #   release: "stable"
      # matchExpressions:
      #   - {key: environment, operator: In, values: [dev]}
  keycloakDefinition:
    name: keycloak
    enabled: true
    config:
      API_KEYCLOAK_PROTOCOL: "http"
      API_KEYCLOAK_HOST: "keycloak"
      API_KEYCLOAK_PORT: "8080"
      KEYCLOAK_PROTOCOL: "http"
      KEYCLOAK_HOST: "keycloak"
      KEYCLOAK_PORT: "8080"
      KEYCLOAK_MASTER_REALM: "master"
      KEYCLOAK_DB_DATABASE: "keycloak"
    secret:
      KEYCLOAK_USER: ""
      KEYCLOAK_PASSWORD: ""
      KEYCLOAK_DB_USER: ""
      KEYCLOAK_DB_PASSWORD: ""
  itaDefinition:
    name: ita
    enabled: true
    config:
      ITA_WEB_PROTOCOL: "http"
      ITA_WEB_HOST: "ita-web-server"
      ITA_WEB_PORT: "8000"
      ITA_API_PROTOCOL: "http"
      ITA_API_HOST: "ita-api-organization"
      ITA_API_PORT: "8080"
      ITA_API_ADMIN_PROTOCOL: "http"
      ITA_API_ADMIN_HOST: "ita-api-admin"
      ITA_API_ADMIN_PORT: "8080"
  pfDatabaseDefinition:
    name: pf-database
    enabled: true
    config:
      DB_VENDOR: "mariadb"
      DB_HOST: "mariadb"
      DB_PORT: "3306"
      DB_DATABASE: "platform"
    secret:
      DB_ADMIN_USER: ""
      DB_ADMIN_PASSWORD: ""
      DB_USER: ""
      DB_PASSWORD: ""
  databaseDefinition:
    name: mariadb
    enabled: true
    secret:
      MARIADB_ROOT_PASSWORD: ""
    persistence:
      enabled: true
      reinstall: false
      accessMode: ReadWriteOnce
      size: 20Gi
      volumeType: hostPath # e.g.) hostPath or AKS
      storageClass: "-" # e.g.) azurefile or - (None)
      # matchLabels:
      #   release: "stable"
      # matchExpressions:
      #   - {key: environment, operator: In, values: [dev]}
  mongodbDefinition:
    name: mongodb
    enabled: true
    secret:
      MONGO_INITDB_ROOT_USERNAME: ""
      MONGO_INITDB_ROOT_PASSWORD: ""
    persistence:
      enabled: true
      reinstall: false
      accessMode: ReadWriteOnce
      size: 20Gi
      volumeType: hostPath # e.g.) hostPath or AKS
      storageClass: "-" # e.g.) azurefile or - (None)
      # matchLabels:
      #   release: "stable"
      # matchExpressions:
      #   - {key: environment, operator: In, values: [dev]}
  itaMongodbDefinition:
    name: ita-mongodb
    enabled: true
    config:
      MONGO_VENDOR: "mongodb"
      MONGO_HOST: "mongodb"
      MONGO_PORT: "27017"
    secret:
      MONGO_INITDB_ROOT_USERNAME: ""
      MONGO_INITDB_ROOT_PASSWORD: ""
      MONGO_ADMIN_USER: ""
      MONGO_ADMIN_PASSWORD: ""

exastro-it-automation:
  ita-api-admin:
    replicaCount: 1
    image:
      repository: "exastro/exastro-it-automation-api-admin"
      tag: ""
      pullPolicy: IfNotPresent
    extraEnv:
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"

  ita-api-organization:
    replicaCount: 1
    image:
      repository: "exastro/exastro-it-automation-api-organization"
      tag: ""
      pullPolicy: IfNotPresent
    extraEnv:
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"

  ita-by-ansible-execute:
    replicaCount: 1
    image:
      repository: "exastro/exastro-it-automation-by-ansible-execute"
      tag: ""
      pullPolicy: IfNotPresent
    extraEnv:
      EXECUTE_INTERVAL: "10"
      ANSIBLE_AGENT_IMAGE: "exastro/exastro-it-automation-by-ansible-agent"
      ANSIBLE_AGENT_IMAGE_TAG: ""
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    serviceAccount:
      create: false
      name: "ita-by-ansible-execute-sa"

  ita-by-ansible-legacy-role-vars-listup:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-ansible-legacy-role-vars-listup"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-ansible-legacy-vars-listup:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-ansible-legacy-vars-listup"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-ansible-pioneer-vars-listup:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-ansible-pioneer-vars-listup"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-ansible-towermaster-sync:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-ansible-towermaster-sync"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-cicd-for-iac:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-cicd-for-iac"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-collector:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-collector"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-conductor-regularly:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-conductor-regularly"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-conductor-synchronize:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-conductor-synchronize"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-excel-export-import:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-excel-export-import"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-execinstance-dataautoclean:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-execinstance-dataautoclean"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-file-autoclean:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-file-autoclean"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-hostgroup-split:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-hostgroup-split"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-menu-create:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-menu-create"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-menu-export-import:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-menu-export-import"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-terraform-cli-execute:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-terraform-cli-execute"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-terraform-cli-vars-listup:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-terraform-cli-vars-listup"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-terraform-cloud-ep-execute:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-terraform-cloud-ep-execute"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-terraform-cloud-ep-vars-listup:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-terraform-cloud-ep-vars-listup"
      tag: ""
      pullPolicy: IfNotPresent

  ita-database-setup-job:
    image:
      repository: ""
      tag: ""
      pullPolicy: IfNotPresent

  ita-web-server:
    replicaCount: 1
    image:
      repository: "exastro/exastro-it-automation-web-server"
      tag: ""
      pullPolicy: IfNotPresent

  ita-migration:
    extraEnv:
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-migration"
      tag: ""
      pullPolicy: IfNotPresent

  ita-api-oase-receiver:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-oase-receiver"
      tag: ""
      pullPolicy: IfNotPresent

  ita-by-oase-conclusion:
    replicaCount: 1
    extraEnv:
      EXECUTE_INTERVAL: "10"
      PLATFORM_API_HOST: "platform-api"
      PLATFORM_API_PORT: "8000"
    image:
      repository: "exastro/exastro-it-automation-by-oase-conclusion"
      tag: ""
      pullPolicy: IfNotPresent

exastro-platform:
  platform-api:
    image:
      repository: "exastro/exastro-platform-api"
      tag: ""

  platform-auth:
    extraEnv:
      # Please set the URL to access
      EXTERNAL_URL: ""
      EXTERNAL_URL_MNG: ""
    ingress:
      enabled: true
      hosts:
        - host: exastro-suite.example.local
          paths:
            - path: /
              pathType: Prefix
              backend: "http"
        - host: exastro-suite-mng.example.local
          paths:
            - path: /
              pathType: Prefix
              backend: "httpMng"
    service:
      type: ClusterIP
      # http:
      #   nodePort: 30080
      # httpMng:
      #   nodePort: 30081
    image:
      repository: "exastro/exastro-platform-auth"
      tag: ""

  platform-migration:
    image:
      repository: "exastro/exastro-platform-migration"
      tag: ""

  platform-web:
    image:
      repository: "exastro/exastro-platform-web"
      tag: ""

  mariadb:
    enabled: true
    image:
      repository: "mariadb"
      tag: "10.9"
      pullPolicy: IfNotPresent
    resources:
      requests:
        memory: "256Mi"
        cpu: "1m"
      limits:
        memory: "2Gi"
        cpu: "4"

  mongodb:
    enabled: true
    image:
      repository: "mongodb"
      tag: "6.0.7"
      pullPolicy: IfNotPresent
    resources:
      requests:
        memory: "256Mi"
        cpu: "1m"
      limits:
        memory: "2Gi"
        cpu: "4"

  keycloak:
    enabled: true
    image:
      repository: "exastro/keycloak"
      tag: ""
      pullPolicy: IfNotPresent
    resources:
      requests:
        memory: "256Mi"
        cpu: "1m"
      limits:
        memory: "2Gi"
        cpu: "4"
